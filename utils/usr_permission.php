<?phpinclude_once('permissions_enums.php');session_start();class UsrPermission{	public function __construct()	{			}		// If the page is not allowed, return false	public function isPageAllowed($page)	{		return $this->_pageAllowed($page, false);	}		// If the page is not allowed, return false	public function isPageActionAllowed($page, $action)	{		return $this->_pageAllowed($page, false, $action);	}		// If the page is not allowed, then it will be redirected to a message error page	public function requestAccessPage($page)	{		return $this->_pageAllowed($page, true);	}		private function _pageAllowed($page, $redirect, $action = '')	{		$fullPath = __DIR__;		$fullPath = str_replace('utils', '', $fullPath);				switch($page)		{			case PermissionType::MAIN:				if( !isset($_SESSION['usr_name']) && !isset($_SESSION['login']) )				{					if($redirect)						$this->_pageNotAllowed();										return false;				}				else					return true;								break;						case PermissionType::TYRES:				include_once($fullPath . 'model/query_processor.php');				$tyre_a = 'x';				$tyre_d = 'x';								$qp = new QueryProcessor();				$permissionsArr = $qp->query_user_roles_array( $_SESSION['user_id'] );								foreach($permissionsArr as $role){					$tyre_a = $role['tyre_a'];					$tyre_d = $role['tyre_d'];				}								if($action != '')				{									if( ($tyre_a == 'y' && $action == PermissionType::TYRE_A) ||						($tyre_d == 'y' && $action == PermissionType::TYRE_D) )						return true;					else						return false;				}				else				{					if( $tyre_a == 'x' && $tyre_d == 'x' )						$this->_pageNotAllowed();				}								break;							case PermissionType::SUPPLIERS:				include_once($fullPath . 'model/query_processor.php');				$supplier_a = 'x';				$supplier_d = 'x';								$qp = new QueryProcessor();				$permissionsArr = $qp->query_user_roles_array( $_SESSION['user_id'] );								foreach($permissionsArr as $role){					$supplier_a = $role['supplier_a'];					$supplier_d = $role['supplier_d'];				}								if($action != '')				{									if( ($supplier_a == 'y' && $action == PermissionType::SUPPLIER_A) ||						($supplier_d == 'y' && $action == PermissionType::SUPPLIER_D) )						return true;					else						return false;				}				else				{					if( $supplier_a == 'x' && $supplier_d == 'x' )						$this->_pageNotAllowed();				}								break;							case PermissionType::DEPTORS:				include_once($fullPath . 'model/query_processor.php');				$deptor_a = 'x';				$deptor_d = 'x';								$qp = new QueryProcessor();				$permissionsArr = $qp->query_user_roles_array( $_SESSION['user_id'] );								foreach($permissionsArr as $role){					$deptor_a = $role['deptor_a'];					$deptor_d = $role['deptor_d'];				}								if($action != '')				{									if( ($deptor_a == 'y' && $action == PermissionType::DEPTOR_A) ||						($deptor_d == 'y' && $action == PermissionType::DEPTOR_D) )						return true;					else						return false;				}				else				{					if( $deptor_a == 'x' && $deptor_d == 'x' )						$this->_pageNotAllowed();				}								break;						case PermissionType::STORES:				include_once($fullPath . 'model/query_processor.php');				$store_v = 'x';				$store_a = 'x';				$store_d = 'x';								$qp = new QueryProcessor();				$permissionsArr = $qp->query_user_roles_array( $_SESSION['user_id'] );								foreach($permissionsArr as $role){					$store_v = $role['store_v'];					$store_a = $role['store_a'];					$store_d = $role['store_d'];				}								if($action != '')				{									if( ($store_v == 'y' && $action == PermissionType::STORE_V) ||						($store_a == 'y' && $action == PermissionType::STORE_A) ||						($store_d == 'y' && $action == PermissionType::STORE_D) )						return true;					else						return false;				}				else				{					if( $store_v == 'x' && $store_a == 'x' && $store_d == 'x' )						$this->_pageNotAllowed();				}								break;						case PermissionType::STORES_MOVEMENTS:				include_once($fullPath . 'model/query_processor.php');				$mov_v = 'x';				$mov_a = 'x';				$mov_d = 'x';								$qp = new QueryProcessor();				$storePermiArr = $qp->query_store_permissions_array( $_SESSION['user_id'] );								$idStore = '';								if( isset( $_SESSION["idStore"] ) )					$idStore = $_SESSION["idStore"];								if( isset($storePermiArr[$idStore]) )					$permsArr = $storePermiArr[$idStore];				else				{					if($redirect)						$this->_pageNotAllowed();										return false;				}								$mov_v = $permsArr['mov_v'];				$mov_a = $permsArr['mov_a'];				$mov_d = $permsArr['mov_d'];								if($action != '')				{									if( ($mov_v == 'y' && $action == PermissionType::MOV_V) ||						($mov_a == 'y' && $action == PermissionType::MOV_A) ||						($mov_d == 'y' && $action == PermissionType::MOV_D) )						return true;					else						return false;				}				else				{					if( $mov_v == 'x' && $mov_a == 'x' && $mov_d == 'x' )						$this->_pageNotAllowed();				}								break;						case PermissionType::SHOPS:				include_once($fullPath . 'model/query_processor.php');				$shop_v = 'x';				$shop_a = 'x';				$shop_d = 'x';								$qp = new QueryProcessor();				$permissionsArr = $qp->query_user_roles_array( $_SESSION['user_id'] );								foreach($permissionsArr as $role){					$shop_v = $role['shop_v'];					$shop_a = $role['shop_a'];					$shop_d = $role['shop_d'];				}								if($action != '')				{									if( ($shop_v == 'y' && $action == PermissionType::SHOP_V) ||						($shop_a == 'y' && $action == PermissionType::SHOP_A) ||						($shop_d == 'y' && $action == PermissionType::SHOP_D) )						return true;					else						return false;				}				else				{					if( $shop_v == 'x' && $shop_a == 'x' && $shop_d == 'x')						$this->_pageNotAllowed();				}								break;						case PermissionType::SHOPS_MOVEMENTS:				include_once($fullPath . 'model/query_processor.php');				$mov_v = 'x';				$mov_a = 'x';				$mov_d = 'x';				$mov_o = 'x';								$qp = new QueryProcessor();				$shopPermiArr = $qp->query_shop_permissions_array( $_SESSION['user_id'] );								$idShop = '';								if( isset( $_SESSION["idShop"] ) )					$idShop = $_SESSION["idShop"];								if( isset($shopPermiArr[$idShop]) )					$permsArr = $shopPermiArr[$idShop];				else				{					if($redirect)						$this->_pageNotAllowed();										return false;				}								$mov_v = $permsArr['mov_v'];				$mov_a = $permsArr['mov_a'];				$mov_d = $permsArr['mov_d'];				$mov_o = $permsArr['mov_o'];								if($action != '')				{									if( ($mov_v == 'y' && $action == PermissionType::MOV_V) ||						($mov_a == 'y' && $action == PermissionType::MOV_A) ||						($mov_d == 'y' && $action == PermissionType::MOV_D) ||						($mov_o == 'y' && $action == PermissionType::MOV_O) )						return true;					else						return false;				}				else				{					if( $mov_v == 'x' && $mov_a == 'x' && $mov_d == 'x' && $mov_o == 'x')						$this->_pageNotAllowed();				}								break;						case PermissionType::PLACES:				if( count($_SESSION['alowedStores']) <= 1 && count($_SESSION['alowedShops']) <= 1 )				{					if($redirect)						$this->_pageNotAllowed();										return false;				}				else					return true;								break;						case PermissionType::ROLES:									include_once($fullPath . 'model/query_processor.php');				$perm = 'x';								$qp = new QueryProcessor();				$permissionsArr = $qp->query_user_roles_array( $_SESSION['user_id'] );								foreach($permissionsArr as $role){					$perm = $role['permission'];				}								if($perm == 'x')				{					if($redirect)						$this->_pageNotAllowed();										return false;				}				else					return true;								break;		}		}		private function _pageNotAllowed()	{		if( isset($_SESSION['login']) && isset($_SESSION['usr_name']) )			header('Location: ../infos/no_access_allowed.php');		else			header('Location: ../index.php');// TODO: Hacer q la pagina index salte a toda la ventana y no solo dentro del content	}		} // End class UsrPermission?>